########################################################################
# Conversion of harmonie grib1 surface parameters into 
#   uerra grib2 compliant ones
########################################################################
#
# - it contains rules for grib_filter tool
# - variables @type@ (=an/fc), @version@ (=8/9) and @outdir@ 
#   (output directory) must be parsed before running it
#
# How to run it:
# - parse variables above to get the final script
# - grib_filter <the final script name> <input grib1 files>
#
# Output:
# - grib1 file in @outdir@
########################################################################

transient parType = "";
transient param2 = -999;
transient sl1 = -999;

transient levtype_str = "";

transient debug = 1;

switch (param) {

   case 228.253: set param2 = 49;      # 10m wind gust speed
   case 124.253: set param2 = 111;     # Momentum flux v-component
   case 125.253: set param2 = 111;     # Momentum flux u-component
   case 132.253: set param2 = 111;     # Latent heat flux through evaporation
   case 244.253: set param2 = 111;     # Latent Heat Sublimation
   case 245.253: set param2 = 111;     # Water evaporation
   case 246.253: set param2 = 111;     # Snow Sublimation
   case 140.253: set param2 = 111;     # direct normal solar irradiance
   case 181.253: set param2 = 111;     # Rain
   case 184.253: set param2 = 111;     # Snow
   case 185.253: set param2 = 111;     # total solid precipitation
   case 239.253: set param2 = 111;     # surface roughness of heat
   case 161.253: set param2 = 111;     # Hail diagnostics
   case 162.253: set param2 = 260066;  # U-wind gust
   case 163.253: set param2 = 260067;  # V-wind gust
   case  58.253: set param2 = 79;      # vertical integrated cloud ice
   case  76.253: set param2 = 78;      # vertical integrated cloud liquid water
   case  51.253: set param2 = 133;     # specific humidity
   case 193.1:   set param2 = 111;     # Surface soil ice
   case  71.253: set param2 = 111;     # Fog
   case 92.1:    set param2 = 111;     # sea ice thickness
   case 130.253: set param2 = 260091;  # net short wave clear sky
   case 131.253: set param2 = 260100;  # net long wave clear sky
   case 113.253: set param2 = 260086;  # TOA net short wave
   case 114.253: set param2 = 260096;  # TOA net long wave
   case 141.253: set param2 = 111;     # sice snow depth perhaps 500045
   case 144.253: set param2 = 260015;  # precip_type



   case 201.253: 
       switch (indicatorOfTypeOfLevel) {
            case 200: set param2 = 111;     # column integrated
            case 105: set param2 = 111;     # accumulated graupel
            default: set param2 = -999;
        }



                
   case 11.1: #set param2 = 260360;  # soil temp
      switch (indicatorOfTypeOfLevel) {
        case 105: #   NOT CORRECT! ends up as hl
          switch (level) {
             case 731: set param2 = 35;     # ice temp l1
             case 732: set param2 = 36;     # l2
             case 733: set param2 = 37;     # l3
             case 734: set param2 = 38;     # l4
             case 950: set param2 = 111;    # T2M_TEB
             case 802: set param2 = 111;    # T2M_ISBA
             case 760: set param2 = 111;    # T2M_SEA
             case 772: set param2 = 111;    # T2M_WAT
             default:
          }
        default:
      }

    default: set param2 = -999;

}

if ( ( timeRangeIndicator == 0 && indicatorOfTypeOfLevel == 105 ) && ( param == 201.253 || param == 184.253 || param == 185.253)){
   set param2 = -999;
}

#assert(type is "@type@");

#set parType="tmp";
#
#set levtype_str = levtype;
#if (levtype == 177){
#       set levtype_str = "sfc";
#}
#if (levtype == 151){
#       set levtype_str = "sol";
#}


#if (debug==1){
#  print "1:debug parType=[parType], levtype=[levtype],  paramId=[paramId], param=[param], param2=[param2]";
#}

if (param2 != -999) {

#  print "[param] [levtype] [levtype_str] [level]";
#  set centre="enmi"
  append"@outdir@/@type@.save.[date].[time].not_yet.grib1";

}
